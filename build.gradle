plugins {
    id 'io.franzbecker.gradle-lombok' version '1.14'
}
allprojects {
    apply plugin: 'maven'

    group = 'org.janusgraph'
    version = '0.5.0-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url 'http://download.oracle.com/maven'
            content {
                includeGroup "com.sleepycat"
            }
        }
        maven {
            url 'http://repo.spring.io/libs-release-remote/'
            content {
                includeGroup "org.restlet.jee"
            }
        }

    }


    dependencies {
        compile 'org.slf4j:slf4j-api:1.7.12'
        runtime 'org.slf4j:slf4j-log4j12:1.7.12'
        runtime 'log4j:log4j:1.2.16'
        testCompile "org.junit.jupiter:junit-jupiter-api"
        testCompile "org.junit.jupiter:junit-jupiter-params"
        testRuntime "org.junit.jupiter:junit-jupiter-engine"
        testRuntime "org.junit.vintage:junit-vintage-engine"
    }

    dependencies {
        constraints {
            compile 'org.apache.tinkerpop:gremlin-core:3.4.6'
            compile 'org.apache.tinkerpop:gremlin-driver:3.4.6'
            compile 'org.apache.tinkerpop:gremlin-groovy:3.4.6'
            compile 'org.apache.tinkerpop:tinkergraph-gremlin:3.4.6'
            compile 'org.apache.tinkerpop:hadoop-gremlin:3.4.6'
            compile 'org.apache.tinkerpop:spark-gremlin:3.4.6'
            compile 'org.apache.tinkerpop:gremlin-server:3.4.6'
            compile 'org.apache.tinkerpop:gremlin-test:3.4.6'
            compile 'com.google.guava:guava:18.0'
            compile 'org.mockito:mockito-core:2.23.0'
            compile 'org.mockito:mockito-inline:2.23.0'
            compile 'org.mockito:mockito-junit-jupiter:2.23.0'
            compile 'org.junit.platform:junit-platform-launcher:1.5.2'
            compile "org.junit.jupiter:junit-jupiter-api:5.5.2"
            compile "org.junit.jupiter:junit-jupiter-params:5.5.2"
            compile "org.junit.jupiter:junit-jupiter-engine:5.5.2"
            compile "org.junit.vintage:junit-vintage-engine:5.5.2"
            testCompile 'org.testcontainers:testcontainers:1.12.4'
            testCompile 'org.testcontainers:cassandra:1.12.4'
            testCompile 'org.testcontainers:elasticsearch:1.12.4'
            testCompile 'org.testcontainers:junit-jupiter:1.12.4'
        }
    }

    test {
        filter {
            excludeTestsMatching "*PerformanceTest"
            excludeTestsMatching "*ConcurrentTest"
            excludeTestsMatching "*Groovy*Test"
            excludeTestsMatching "*ProcessPerformanceTest"
            if (hasProperty('testTinkerPop')) {
                excludeTestsMatching "*ComputerTest"
                excludeTestsMatching "*ProcessTest"
                excludeTestsMatching "*StructureTest"
            }
        }
        useJUnitPlatform {
            excludeTags 'MEMORY_TESTS', 'PERFORMANCE_TESTS', 'BRITTLE_TESTS'
            
            systemProperty('junit.jupiter.execution.parallel.enabled', 'true')
            systemProperty('junit.jupiter.execution.parallel.mode.default', 'concurrent')
            systemProperty('junit.jupiter.execution.parallel.config.dynamic.factor', 0.5)
            systemProperty('junit.jupiter.testinstance.lifecycle.default', 'per_class')
        }
    }

    sourceCompatibility = '1.8'

    configurations.all {
        resolutionStrategy {
            // fail eagerly on version conflict (includes transitive dependencies)
            // e.g. multiple different versions of the same dependency (group and name are equal)
            failOnVersionConflict()

            // prefer modules that are part of this build (multi-project or composite build) over external modules
            preferProjectModules()
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}
