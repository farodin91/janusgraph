# Copyright 2019 JanusGraph Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

language: java
os: linux
dist: xenial
services:
  - docker
jdk:
  - openjdk8
addons:
  apt:
    update: true

git:
  depth: false

cache:
  directories:
    - ${HOME}/.m2

env:
  global:
    - ES_JAVA_OPTS="-Xms256m -Xmx512m"
    - export STRUCTOR_VERSION=v1.7.1

stages:
  - test
  - documentation
  - deploy

x-template-full:
  &FULL_BUILD_JOB
  stage: test
  install: ./gradlew clean :janusgraph-${MODULE}:compileTestJava
  script: ./gradlew :janusgraph-${MODULE}:test ${ARGS}
  after_success: bash <(curl -s https://codecov.io/bash);
  if: type = cron OR commit_message =~ /\[full build\]/

x-template-standard:
  &STANDARD_TEST_JOB
  stage: test
  install: ./gradlew clean :janusgraph-${MODULE}:compileTestJava
  script: ./gradlew :janusgraph-${MODULE}:test ${ARGS}
  after_success: bash <(curl -s https://codecov.io/bash);
  if: commit_message !~ /\[doc only\]/

jobs:
  include:
    - <<: *STANDARD_TEST_JOB
      env: MODULE='driver'
    - <<: *STANDARD_TEST_JOB
      env: MODULE='test'
    - <<: *STANDARD_TEST_JOB
      env: MODULE='server'
    - <<: *STANDARD_TEST_JOB
      env: MODULE='inmemory' ARGS='-PtestTinkerPop=true'
    - <<: *STANDARD_TEST_JOB
      env: MODULE='berkeleyje'
    - <<: *STANDARD_TEST_JOB
      env: MODULE='lucene'
    - <<: *STANDARD_TEST_JOB
      env: MODULE='solr' ARGS='-Pdocker,solr7'
    - <<: *STANDARD_TEST_JOB
      env: MODULE='es' ARGS='-PtestProfile=elasticsearch7'
    - <<: *STANDARD_TEST_JOB
      env: MODULE='es' ARGS='-PtestProfile=elasticsearch6'
    - <<: *STANDARD_TEST_JOB
      env: MODULE='es' ARGS='-PtestProfile=elasticsearch60'

    - <<: *STANDARD_TEST_JOB
      env: MODULE='hbase-parent/janusgraph-hbase-10'
    - <<: *STANDARD_TEST_JOB
      env: MODULE='hbase-parent/janusgraph-hbase-10' INSTALL_ARGS='-Dhbase.profile -Phbase2' ARGS='-Dhbase.profile -Phbase2'
    - <<: *STANDARD_TEST_JOB
      env: MODULE='cql' ARGS='-PtestProfile=cassandra3-byteordered'
    - <<: *STANDARD_TEST_JOB
      env: MODULE='cql' ARGS='-PtestProfile=cassandra3-murmur'
    - <<: *STANDARD_TEST_JOB
      env: MODULE='cql' ARGS='-PtestProfile=cassandra3-murmur-ssl'
    - <<: *STANDARD_TEST_JOB
      env: MODULE='cql' ARGS='-PtestProfile=cassandra3-murmur-client-auth'
    - <<: *FULL_BUILD_JOB
      env: MODULE='cql' ARGS='-PtestProfile=cassandra2-byteordered'
    - <<: *FULL_BUILD_JOB
      env: MODULE='cql' ARGS='-PtestProfile=cassandra2-murmur'
    - <<: *FULL_BUILD_JOB
      env: MODULE='cql' ARGS='-PtestProfile=cassandra2-murmur-ssl'
    - <<: *FULL_BUILD_JOB
      env: MODULE='cql' ARGS='-PtestProfile=cassandra2-murmur-client-auth'

    - stage: test
      env: COVERITY_ONLY=true
      install: travis_wait mvn --quiet install -DskipTests=true -Dmaven.javadoc.skip=true --batch-mode --show-version;
      script:
        - echo "Building Docker image for Coverity analysis";
          docker build -t janusgraph/analysis analysis;
          echo "Running Coverity scan";
          travis_wait 50 \
            docker run --rm \
                -v ${HOME}/.m2:/root/.m2 -v ${PWD}:/opt/janusgraph \
                -e COVERITY_SCAN_TOKEN="${COVERITY_SCAN_TOKEN}" \
                -e COVERITY_EMAIL="${COVERITY_EMAIL}" \
                -i janusgraph/analysis;
      if: branch = coverity_scan

    - stage: documentation
      install: docker build -t doc-site:mkdocs -f docs.Dockerfile .
      script:
        - echo "Updating configuration markdown";
          mvn --quiet clean install -DskipTests=true -pl janusgraph-doc -am;
        - echo "Check for changes in configuration";
          git diff  --exit-code docs/basics/janusgraph-cfg.md;
        - docker run --rm -v $PWD:/mkdocs doc-site:mkdocs mkdocs build
    
    - stage: deploy
      install: skip
      script: skip
      before_deploy:
        - echo "Download documentation generator";
          curl -sfL https://raw.githubusercontent.com/containous/structor/master/godownloader.sh | bash -s -- -b $GOPATH/bin ${STRUCTOR_VERSION}
        - echo "Build documentation";
          sudo "$GOPATH/bin/structor" -o janusgraph -r janusgraph \
            --force-edit-url \
            --rqts-url="https://raw.githubusercontent.com/janusgraph/janusgraph/master/requirements.txt"
            --dockerfile-url="https://raw.githubusercontent.com/janusgraph/janusgraph/master/docs.Dockerfile" \
            --menu.js-url="https://raw.githubusercontent.com/janusgraph/janusgraph/master/docs/theme/structor-menu.js.gotmpl" \
            --exp-branch=master --debug;
          sudo chown -R $UID site;
      deploy:
        provider: pages
        repo: JanusGraph/docs.janusgraph.org
        target_branch: master
        edge: false
        github_token: ${GITHUB_TOKEN}
        local_dir: site
        skip_cleanup: true
        on:
          repo: JanusGraph/janusgraph
          all_branches: true
          condition: $TRAVIS_BRANCH =~ ^master$|^v[0-9.]+$

# Syntax and more info: https://docs.travis-ci.com/user/notifications
notifications:
  email:
    - janusgraph-ci@googlegroups.com